$cartBGColor: #d9b25f;

.products {
    padding: 30px 30px;
    display: flex;
    position: relative;

    .left {
        // flex: 1;
        width: 200px;
        position: sticky;
        height: 100%;
        top: 60px;
        padding: 0 20px 0 0;

        .filterItem {
            padding: 0 0 30px 0;

            h2 {
                font-weight: 500;
                font-size: 1.4rem;
                margin: 0 0 10px 0;
                border-bottom: 1px solid gray;
            }

            .inputItem {
                // * {
                //     box-sizing: border-box;
                // }

                $bg: #ecf0f3;
                $fg: #1f2020;

                h1 {
                    margin: 0;
                    // color: color.scale($fg, $saturation: 30%, $lightness: 60%);
                }

                [type="radio"] {
                    display: none;
                }

                label {
                    // position: relative;
                    padding: 5px 0;
                    display: grid;
                    grid-template-columns: auto 1fr;
                    align-items: center;
                    font-weight: 500;
                    transition: 0.4s ease;
                    color: transparentize($fg, 0.5);
                }

                label:hover {
                    color: inherit;
                }

                label:before {
                    transition: 0.4s ease;
                    content: "";
                    border-radius: 100vmax;
                    display: inline-grid;
                    margin-right: 1em;
                    width: 25px;
                    height: 25px;
                    box-shadow: -0.5em -0.25em 0.5em 0 lighten($bg, 20%),
                        0.5em 0.25em 1.25em 0 darken($bg, 20%);
                    background-color: lighten($bg, 1%);
                    filter: blur(0.1em);
                    cursor: pointer;
                }

                [type="radio"]:checked+label {
                    color: #{$fg};
                    text-indent: 0.5em;
                    font-weight: 600;
                }

                [type="radio"]:checked+label:before {
                    box-shadow: -0.5em -0.25em 0.5em 0 lighten($bg, 20%),
                        0.5em 0.25em 1.25em 0 darken($bg, 20%),
                        0.1em 0.1em 0 transparentize(darken($bg, 20%), 0.5) inset,
                        0.2em 0.2em 0 transparentize(darken($bg, 10%), 0.5) inset,
                        0.1em 0.1em 0 transparentize(lighten($bg, 40%), 0.5) inset,
                        -0.2em -0.2em 0 transparentize(lighten($bg, 20%), 0.5) inset;
                }

            }

            // .inputItem {
            //     margin-bottom: 5px;

            //     label {
            //         margin-left: 5px;
            //     }
            // }

            .range-slider.flat {
                width: 100%;
                margin-top: 20px;
                --thumb-size: 20px;
                --track-height: calc(var(--thumb-size) / 3);
                --thumb-shadow: 0 0 0 7px var(--primary-color) inset, 0 0 0 99px white inset;
                --thumb-shadow-hover: 0 0 0 9px var(--primary-color) inset,
                    0 0 0 99px white inset;
                --thumb-shadow-active: 0 0 0 13px var(--primary-color) inset;
            }

            ////////////////////////////////////////////////
            // The main styles

            .range-slider {
                --primary-color: #d9b25f;

                --value-offset-y: var(--ticks-gap);
                --value-active-color: white;
                --value-background: transparent;
                --value-background-hover: var(--primary-color);
                --value-font: 700 12px/1 Arial;

                --fill-color: var(--primary-color);
                --progress-background: #eee;
                --progress-radius: 20px;
                --track-height: calc(var(--thumb-size) / 2);

                --min-max-font: 12px Arial;
                --min-max-opacity: 0.5;
                --min-max-x-offset: 10%; // 50% to center

                --thumb-size: 22px;
                --thumb-color: white;
                --thumb-shadow: 0 0 3px rgba(0, 0, 0, 0.4), 0 0 1px rgba(0, 0, 0, 0.5) inset,
                    0 0 0 99px var(--thumb-color) inset;

                --thumb-shadow-active: 0 0 0 calc(var(--thumb-size) / 4) inset var(--thumb-color),
                    0 0 0 99px var(--primary-color) inset, 0 0 3px rgba(0, 0, 0, 0.4);

                --thumb-shadow-hover: var(--thumb-shadow);

                --ticks-thickness: 1px;
                --ticks-height: 5px;
                --ticks-gap: var(--ticks-height,
                        0); // vertical space between the ticks and the progress bar
                --ticks-color: silver;

                // ⚠️ BELOW VARIABLES SHOULD NOT BE CHANGED
                --step: 1;
                --ticks-count: Calc(var(--max) - var(--min)) / var(--step);
                --maxTicksAllowed: 30;
                --too-many-ticks: Min(1, Max(var(--ticks-count) - var(--maxTicksAllowed), 0));
                --x-step: Max(var(--step),
                        var(--too-many-ticks) * (var(--max) - var(--min))); // manipulate the number of steps if too many ticks exist, so there would only be 2
                --tickInterval: 100/ ((var(--max) - var(--min)) / var(--step)) * var(--tickEvery, 1);
                --tickIntervalPerc: calc((100% - var(--thumb-size)) / ((var(--max) - var(--min)) / var(--x-step)) * var(--tickEvery, 1));

                --value-a: Clamp(var(--min),
                        var(--value, 0),
                        var(--max)); // default value ("--value" is used in single-range markup)
                --value-b: var(--value, 0); // default value
                --text-value-a: var(--text-value, "");

                --completed-a: calc((var(--value-a) - var(--min)) / (var(--max) - var(--min)) * 100);
                --completed-b: calc((var(--value-b) - var(--min)) / (var(--max) - var(--min)) * 100);
                --ca: Min(var(--completed-a), var(--completed-b));
                --cb: Max(var(--completed-a), var(--completed-b));

                // breakdown of the below super-complex brain-breaking CSS math:
                // "clamp" is used to ensure either "-1" or "1"
                // "calc" is used to inflat the outcome into a huge number, to get rid of any value between -1 & 1
                // if absolute diff of both completed % is above "5" (%)
                // ".001" bumps the value just a bit, to avoid a scenario where calc resulted in "0" (then clamp will also be "0")
                --thumbs-too-close: Clamp(-1,
                        1000 * (Min(1, Max(var(--cb) - var(--ca) - 5, -1)) + 0.001),
                        1);
                --thumb-close-to-min: Min(1, Max(var(--ca) - 2, 0)); // 2% threshold
                --thumb-close-to-max: Min(1, Max(98 - var(--cb), 0)); // 2% threshold

                @mixin thumb {
                    appearance: none;
                    height: var(--thumb-size);
                    width: var(--thumb-size);
                    transform: var(--thumb-transform);
                    border-radius: var(--thumb-radius, 50%);
                    background: var(--thumb-color);
                    box-shadow: var(--thumb-shadow);
                    border: none;
                    pointer-events: auto;
                    transition: 0.1s;
                }

                display: inline-block;
                height: Max(var(--track-height), var(--thumb-size));
                // margin: calc((var(--thumb-size) - var(--track-height)) * -.25) var(--thumb-size) 0;
                background: linear-gradient(to right,
                    var(--ticks-color) var(--ticks-thickness),
                    transparent 1px) repeat-x;
                background-size: var(--tickIntervalPerc) var(--ticks-height);
                background-position-x: calc(var(--thumb-size) / 2 - var(--ticks-thickness) / 2);
                background-position-y: var(--flip-y, bottom);

                padding-bottom: var(--flip-y, var(--ticks-gap));
                padding-top: calc(var(--flip-y) * var(--ticks-gap));

                position: relative;
                z-index: 1;

                &[data-ticks-position="top"] {
                    --flip-y: 1;
                }

                // mix/max texts
                &::before,
                &::after {
                    --offset: calc(var(--thumb-size) / 2);
                    content: counter(x);
                    display: var(--show-min-max, block);
                    font: var(--min-max-font);
                    position: absolute;
                    bottom: var(--flip-y, -2.5ch);
                    top: calc(-2.5ch * var(--flip-y));
                    opacity: Clamp(0, var(--at-edge), var(--min-max-opacity));
                    transform: translateX(calc(var(--min-max-x-offset) * var(--before, -1) * -1)) scale(var(--at-edge));
                    pointer-events: none;
                }

                &::before {
                    --before: 1;
                    --at-edge: var(--thumb-close-to-min);
                    counter-reset: x var(--min);
                    left: var(--offset);
                }

                &::after {
                    --at-edge: var(--thumb-close-to-max);
                    counter-reset: x var(--max);
                    right: var(--offset);
                }

                &__values {
                    position: relative;
                    top: 50%;
                    line-height: 0;
                    text-align: justify;
                    width: 100%;
                    pointer-events: none;
                    margin: 0 auto;
                    z-index: 5;

                    // trick so "justify" will work
                    &::after {
                        content: "";
                        width: 100%;
                        display: inline-block;
                        height: 0;
                        background: red;
                    }
                }

                &__progress {
                    --start-end: calc(var(--thumb-size) / 2);
                    --clip-end: calc(100% - (var(--cb)) * 1%);
                    --clip-start: calc(var(--ca) * 1%);
                    --clip: inset(-20px var(--clip-end) -20px var(--clip-start));
                    position: absolute;
                    left: var(--start-end);
                    right: var(--start-end);
                    top: calc(var(--ticks-gap) * var(--flip-y, 0) + var(--thumb-size) / 2 - var(--track-height) / 2);
                    //  transform: var(--flip-y, translateY(-50%) translateZ(0));
                    height: calc(var(--track-height));
                    background: var(--progress-background, #eee);
                    pointer-events: none;
                    z-index: -1;
                    border-radius: var(--progress-radius);

                    // fill area
                    &::before {
                        content: "";
                        position: absolute;
                        // left: Clamp(0%, calc(var(--ca) * 1%), 100%); // confine to 0 or above
                        // width: Min(100%, calc((var(--cb) - var(--ca)) * 1%)); // confine to maximum 100%
                        left: 0;
                        right: 0;
                        clip-path: var(--clip);
                        top: 0;
                        bottom: 0;
                        background: var(--fill-color, black);
                        box-shadow: var(--progress-flll-shadow);
                        z-index: 1;
                        border-radius: inherit;
                    }

                    // shadow-effect
                    &::after {
                        content: "";
                        position: absolute;
                        top: 0;
                        right: 0;
                        bottom: 0;
                        left: 0;
                        // box-shadow: var(--progress-shadow);
                        pointer-events: none;
                        border-radius: inherit;
                    }
                }

                &>input {
                    -webkit-appearance: none;
                    width: 100%;
                    height: var(--thumb-size);
                    margin: 0;
                    position: absolute;
                    left: 0;
                    top: calc(50% - Max(var(--track-height), var(--thumb-size)) / 2 + calc(var(--ticks-gap) / 2 * var(--flip-y, -1)));
                    cursor: -webkit-grab;
                    cursor: grab;
                    outline: none;
                    background: none;

                    &:not(:only-of-type) {
                        pointer-events: none;
                    }

                    &::-webkit-slider-thumb {
                        @include thumb;
                    }

                    &::-moz-range-thumb {
                        @include thumb;
                    }

                    &::-ms-thumb {
                        @include thumb;
                    }

                    &:hover {
                        --thumb-shadow: var(--thumb-shadow-hover);

                        &+output {
                            --value-background: var(--value-background-hover);
                            --y-offset: -5px;
                            color: var(--value-active-color);
                            box-shadow: 0 0 0 3px var(--value-background);
                        }
                    }

                    &:active {
                        --thumb-shadow: var(--thumb-shadow-active);
                        cursor: grabbing;
                        z-index: 2; // when sliding left thumb over the right or vice-versa, make sure the moved thumb is on top

                        +output {
                            transition: 0s;
                        }
                    }

                    &:nth-of-type(1) {
                        --is-left-most: Clamp(0, (var(--value-a) - var(--value-b)) * 99999, 1);

                        &+output {
                            &:not(:only-of-type) {
                                --flip: calc(var(--thumbs-too-close) * -1);
                            }

                            --value: var(--value-a);
                            --x-offset: calc(var(--completed-a) * -1%);

                            &::after {
                                content: var(--prefix, "") var(--text-value-a) var(--suffix, "");
                            }
                        }
                    }

                    &:nth-of-type(2) {
                        --is-left-most: Clamp(0, (var(--value-b) - var(--value-a)) * 99999, 1);

                        &+output {
                            --value: var(--value-b);
                        }
                    }

                    // non-multiple range should not clip start of progress bar
                    &:only-of-type {
                        ~.range-slider__progress {
                            --clip-start: 0;
                        }
                    }

                    &+output {
                        --flip: -1;
                        --x-offset: calc(var(--completed-b) * -1%);
                        --pos: calc(((var(--value) - var(--min)) / (var(--max) - var(--min))) * 100%);

                        pointer-events: none;
                        position: absolute;
                        z-index: 5;
                        background: var(--value-background);
                        border-radius: 10px;
                        padding: 2px 4px;
                        left: var(--pos);
                        transform: translate(var(--x-offset),
                                calc(150% * var(--flip) - (var(--y-offset, 0px) + var(--value-offset-y)) * var(--flip)));
                        transition: all 0.12s ease-out, left 0s;

                        &::after {
                            content: var(--prefix, "") var(--text-value-b) var(--suffix, "");
                            font: var(--value-font);
                        }
                    }
                }
            }
        }

        .filterBtn {
            display: none;
        }
    }

    .right {
        flex: 4;

        .catImg {
            width: 100%;
            height: 300px;
            object-fit: cover;
        }
    }

    @media (max-width:1100px) {
        .left {
            .filterItem {
                h2 {
                    font-size: 1.2rem;
                }
            }
        }
    }

    @media (max-width:1000px) {
        .left {
            flex: 0;
            position: fixed;
            width: 200px;
            padding: 20px;
            top: 0;
            left: -240px;
            background-color: white;
            z-index: 2000;
            transition: all 0.5s ease-in-out;
            // transform: translateX(200px);

            .filterBtn {
                display: block;
                position: absolute;
                top: calc(50%);
                left: calc(250px - 60vh);
                margin: 0;
                padding: 5px;
                transform: rotateZ(270deg);
                width: 120vh;
                border: none;
                background-color: pink;
            }

            .filterItem {
                .categoryHeading {
                    margin-top: 40px;
                }
            }
        }
    }

    @media (max-width:500px) {
        padding: 0;
    }
}